import random
import hashlib
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad
from Crypto.Util.number import getPrime

sz = 1024

FLAG = b'BUETCTF{...}'
p = getPrime(sz)
g = 7

while True:
  key = random.getrandbits(sz)
  if key < p:
    break

def encrypt(m, key):
  return AES.new(hashlib.sha256(str(key).encode()).digest(), AES.MODE_ECB).encrypt(pad(m, 16))

y = pow(g, key, p)
ct = encrypt(FLAG, key).hex()

# Nooooooooo don't flip my bits plzzzzzzzz
for _ in range(4):
  key ^= (1 << random.randrange(1, sz - 1))

print(f"{p=}")
print(f"{y=}")
print(f"{ct=}")
print(f"{key=}")
"""
p=113661483183599207666780369116478760871276423927132803405418082122587758493346987660116928155896918760533730362802627002308566750723206804302084761930855816675103149346004359320141206169305736089154645427652261031099756261117446871987551025288975427357052873914733538073915101574737774660429809674771810848271
y=8173116922439860088541141261289689960280327223117169708297806909529216065634883860226358008552279397824385117324142405165918261023886745883694230167315896195642203058616335618164407725448420238537687004123604889762806940652512992175530473289819350650365265304086443946832207875764837796425129498291389898140
ct='16db554562689e7f088efaa0daaaca7b09de0f9f365368b1201311f1392b19e0ae52b0f9b9786d94b77db07f29dd322207ed1fc99c5d7fec21bcb158f0ec1a65'
key=30287683382406630373983038341855903551063852746571598993640574228509616821481195198169199625250616175958766803781489854200998419394222315209116371708084015862431179054247135646674223693411838345904661420086287325773649043159011421283722269918524296653076356568543549825607815143576312752403032013609266909618
"""
